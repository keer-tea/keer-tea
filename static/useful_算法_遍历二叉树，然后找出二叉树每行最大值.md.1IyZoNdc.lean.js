import{_ as i,c as a,o as n,aK as h}from"./chunks/framework.gpVTZwhR.js";const g=JSON.parse('{"title":"遍历二叉树，然后找出二叉树每行最大值","description":"","frontmatter":{"label":["algorithm"]},"headers":[{"level":2,"title":"帮助理解的例子","slug":"帮助理解的例子","link":"#帮助理解的例子","children":[]},{"level":2,"title":"遍历出二叉树的所有路径","slug":"遍历出二叉树的所有路径","link":"#遍历出二叉树的所有路径","children":[]},{"level":2,"title":"找出二叉树每行最大值","slug":"找出二叉树每行最大值","link":"#找出二叉树每行最大值","children":[{"level":3,"title":"方案 1","slug":"方案-1","link":"#方案-1","children":[]},{"level":3,"title":"方案 2","slug":"方案-2","link":"#方案-2","children":[]}]}],"relativePath":"useful/算法/遍历二叉树，然后找出二叉树每行最大值.md","filePath":"useful/算法/遍历二叉树，然后找出二叉树每行最大值.md","lastUpdated":1709394628000}'),l={name:"useful/算法/遍历二叉树，然后找出二叉树每行最大值.md"};function p(t,s,k,e,r,E){return n(),a("div",null,s[0]||(s[0]=[h("",37)]))}const y=i(l,[["render",p]]);export{g as __pageData,y as default};
